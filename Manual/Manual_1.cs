/*
Для создания нового проекта создается новая папка или открывается существующая и в терминале выполнятеся команда git init.

В процессе работы, изменения сохраняются также, как и на прошлом курсе по контролю версий: git add -> git commit -> git push origin main (если надо сохранить в удаленный репозиторий, для этого надо привязаться в удаленному репозиторию: git remote адрес -> git branch -M main -> git push origin main).

Чтобы сохранить изменения, надо перейти в терминал основной папки.

Если в папке требуется создать дополнительные подпапки, то для работы в них надо нажать ПКМ по подпапке и выбрать "Открыть во строенном терминале".

Затем в терминале для запуска нового проекта - dotnet new console.

Для добавления комментариев в код, чтобы его не считывала программа и терминал и можно было сделать напоминание себе по среди кода - перед таким текстом ставится //Комментарий.

Если комментарий длинный (больше одной строки), можно выделить абзац: в начале перед абзацем поставить "/*"; в конце после абзаца поставить * /. 

Console - то что позволяет работать с окном терминала (связующее).

; - признак окончания оператора.//= - означает присваивание, например, какое-либо значение переменной.  

*/


------------------------------------------------------------------------------------
/*
ТЕРМИНАЛ:
 dotnet new console - создать новый проект
 dotnet run - запускает программу
*/
------------------------------------------------------------------------------------
/*
РАБОЧЕЕ ПОЛЕ:
 Console.WriteLine("Текст"); Вывод чего-либо в терминал (на экран) и переносит курсор/ последующий текст на новую строку.
 Console.Write("Текст"); Вывод чего-либо в терминал (на экран), но не происходит перехода на новую строку.
 Console.ReadLine(); Считывает данные, но полученные данные необходимо где-то сохранить, для этого создается переменная (контейнер), например "string название переменной", т.к. будут вводиться строки (переводится string), название может быть другим, подходящим по смыслу: string "название переменной" = Console.ReadLine();
 Console.Clear(); Очищает консоль каждый раз когда запускается программа.
 Console.SetCursorPosition(10, 4); Выставляет выбранный символ в указанную позицию (10-отступ сбоку, 4-отступ троками). Ниже WriteLine "+" этот знак будет выставлен в терминале.
 new Random().Next(1, 10); Позволяет генерировать случайные числа в диапазоне от 1 до 10 (диапазон можно менять).
 if - используется при создании условия (ветвление), вместе с else.
 else - используется для перевода на следующее действие, в случае не выполнения условия.
 while(count < 10000); While - оператор цикла. Когда используется while обязательно надо ставить счетчик count, чтобы программа не ушла в бесконечный цикл.
 ToLower() - используется, чтобы программа могла считывать и проверять вводимые данные в любом регистре.
 int day = Convert.ToInt32(Console.ReadLine()); Convert.ToInt32 - пишется для конвертации символов в числа, т.к. когда вводишь что-либо в консоли, то это считывается как символы.
    Может использоваться в связке с Console.WriteLine("Введите число:");, для примера:
    Console.WriteLine("Введите число:");
    int day = Convert.ToInt32(Console.ReadLine());
*/
 
 //FE:
 Console.WriteLine("Введите ваше имя "); // Выведет в терминал приглашение представиться "введите ваше имя", имя будет вводиться на след строке
 string username = Console.ReadLine(); // После ввода пользователем имени, оно запишется в переменную
 Console.WriteLine("Привет, "); // Выведет в терминал "Привет, "
 Console.WriteLine(username); // Выведет в терминал "имя пользователя" на след строке, которое было записано в переменную
 // Введите ваше имя
 // Миша
 // Привет,
 // Миша
------------------------------------------------------------------------------------
 Console.Write("Введите ваше имя "); // Выведет в терминал приглашение представиться "введите ваше имя", имя будет вводиться на той же строке
 string username = Console.ReadLine(); // После ввода пользователем имени, оно запишется в переменную
 Console.Write("Привет, "); // Выведет в терминал "Привет, "
 Console.Write(username); // Выведет в терминал "имя пользователя" на той же строке, которое было записано в переменную
 // Введите ваше имя Миша 
 // Привет, Миша
------------------------------------------------------------------------------------
 int numberA = new Random().Next(1, 10); // new random().Next(1, 10) - позволяет генерировать случайные
 //числа в диапазоне от 1 до 10 (диапазон можно менять). 
 Console.WriteLine(numberA); //Прописывается, чтобы выводило в терминал выбранное случайно число.
 int numberB = new Random().Next(1, 10);
 Console.WriteLine(numberB);
 int result = numberA + numberB;
 Console.WriteLine(result);
------------------------------------------------------------------------------------
 Console.Write("Введите имя пользователя: ");
string username = Console.ReadLine();

//if(username == "Маша")
 if(username.ToLower() == "маша") //if - условие, т.е. если пользователь указывает данное имя, то его будет 
//приветствовать по особенному. ToLower - позволяет считывать имя в любом регистре.
{
    Console.WriteLine("Ура, это же МАША"); // Если условие соблюдено, то выдаст особенное приветствие.
}
else //"иначе", если условие не соблюдено, то программа выведет обычное приветствие.
{
    Console.Write("Привет, ");
    Console.WriteLine(username);
}
------------------------------------------------------------------------------------
Console.Clear(); //Очищает консоль каждый раз когда запускается программа.

int xa = 40; 
int ya = 1;
int xb = 1;
int yb = 30;
int xc = 80;
int yc = 30;   
// или можно указать через запятую в столбик:
//int xa = 1, ya = 1,
//    xb = 1, yb = 30,
//    xc = 60, yc = 30;   

Console.SetCursorPosition(xa, ya);
Console.WriteLine("+");

Console.SetCursorPosition(xb, yb);
Console.WriteLine("+");

Console.SetCursorPosition(xc, yc);
Console.WriteLine("+");

int x = xa, y = xb;

int count = 0;
while(count < 10000)// While - оператор цикла. Когда используется while обязательно надо ставить счетчик count, чтобы программа
//не ушла в бесконечный цикл.
{
    int what = new Random().Next(0, 3); //(1, 3) - это 0 1 2.
    if (what == 0)
    {
        x = (x + xa) / 2;
        y = (y + ya) / 2;
    }

      if (what == 1)
    {
        x = (x + xb) / 2;
        y = (y + yb) / 2;
    }

      if (what == 2)
    {
        x = (x + xc) / 2;
        y = (y + yc) / 2;
    }

Console.SetCursorPosition(x, y);
Console.WriteLine("+");
count++;
}
------------------------------------------------------------------------------------